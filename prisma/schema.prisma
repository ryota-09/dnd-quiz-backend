// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator nestgraphql {
   provider = "node node_modules/prisma-nestjs-graphql"
   output = "../src/@generated/prisma-nestjs-graphql"
   fields_Validator_from = "class-validator"
   fields_Validator_input = true
   decorate_1_type        = "CreateOne*Args"
   decorate_1_field       = data
   decorate_1_name        = ValidateNested
   decorate_1_from        = "class-validator"
   decorate_1_arguments   = "[]"
   decorate_2_type        = "CreateOne*Args"
   decorate_2_field       = data
   decorate_2_from        = "class-transformer"
   decorate_2_arguments   = "['() => {propertyType.0}']"
   decorate_2_name        = Type
}

model User {
  /// @Field(() => ID)
  id String @id @default(uuid())
  /// @Validator.IsNotEmpty()
  username String
   /// @Validator.@IsEmail()
  email String @unique
  /// @HideField()
  /// @Validator.MinLength(8)
  password String
  img_path String
  /// @HideField({ input: true, output: true })
  hashedRefreshToken String?
  /// @HideField({ input: true, output: true })
  created_at DateTime @default(now())
  /// @HideField({ input: true, output: true })
  updated_at DateTime @updatedAt
  game_history Game[]
}

model Game {
  id String @id @default(uuid())
  user_id String 
  user User @relation(fields: [user_id], references: [id])
  trial_time Int
  correct_count Int
  vocabulary_point Int
  total_point Int
  created_at DateTime @default(now())
}

model Word {
  id String @id @default(uuid())
  text String
  level Int
}
